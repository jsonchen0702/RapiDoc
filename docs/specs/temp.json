{
  "components": {
    "headers": {
      "DeprecationHeader": {
        "description": "A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:\nhttps://tools.ietf.org/id/draft-dalal-deprecation-header-01.html\n",
        "example": "2021-07-01T00:00:00Z",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "InternalGlooNormalizedPathHeader": {
        "description": "An internal header used by Snyk's API-Gateway for analytics.\n",
        "schema": {
          "type": "string"
        },
        "x-snyk-internal": true
      },
      "InternalGlooOrgIdHeader": {
        "description": "An internal header used by Snyk's API-Gateway for analytics.\n",
        "schema": {
          "format": "uuid",
          "type": "string"
        },
        "x-snyk-internal": true
      },
      "RequestIdResponseHeader": {
        "description": "A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.\n",
        "example": "4b58e274-ec62-4fab-917b-1d2c48d6bdef",
        "schema": {
          "format": "uuid",
          "type": "string"
        }
      },
      "SunsetHeader": {
        "description": "A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:\nhttps://datatracker.ietf.org/doc/html/rfc8594\n",
        "example": "2021-08-02T00:00:00Z",
        "schema": {
          "format": "date-time",
          "type": "string"
        }
      },
      "VersionRequestedResponseHeader": {
        "description": "A header containing the version of the endpoint requested by the caller.",
        "example": "2021-06-04",
        "schema": {
          "$ref": "#/components/schemas/QueryVersion"
        }
      },
      "VersionServedResponseHeader": {
        "description": "A header containing the version of the endpoint that was served by the API.",
        "example": "2021-06-04",
        "schema": {
          "$ref": "#/components/schemas/ActualVersion"
        }
      },
      "VersionStageResponseHeader": {
        "description": "A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.\n",
        "schema": {
          "enum": [
            "wip",
            "experimental",
            "beta",
            "ga",
            "deprecated",
            "sunset"
          ],
          "example": "ga",
          "type": "string"
        }
      }
    },
    "parameters": {
      "EndingBefore": {
        "description": "Return the page of results immediately before this cursor",
        "example": "v1.eyJpZCI6IjExMDAifQo=",
        "in": "query",
        "name": "ending_before",
        "schema": {
          "type": "string"
        }
      },
      "Limit": {
        "description": "Number of results to return per page",
        "example": 10,
        "in": "query",
        "name": "limit",
        "schema": {
          "default": 10,
          "format": "int32",
          "maximum": 100,
          "minimum": 10,
          "multipleOf": 10,
          "type": "integer"
        }
      },
      "StartingAfter": {
        "description": "Return the page of results immediately after this cursor",
        "example": "v1.eyJpZCI6IjEwMDAifQo=",
        "in": "query",
        "name": "starting_after",
        "schema": {
          "type": "string"
        }
      },
      "Version": {
        "description": "The requested version of the endpoint to process the request",
        "example": "2021-06-04",
        "in": "query",
        "name": "version",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/QueryVersion"
        }
      }
    },
    "responses": {
      "400": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Bad Request: A parameter provided as a part of the request was invalid.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "401": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "403": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Unauthorized: the request requires an authentication token or a token with more permissions.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "404": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Not Found: The resource being operated on could not be found.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      },
      "500": {
        "content": {
          "application/vnd.api+json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDocument"
            }
          }
        },
        "description": "Internal Server Error: An error was encountered while attempting to process the request.",
        "headers": {
          "deprecation": {
            "$ref": "#/components/headers/DeprecationHeader"
          },
          "snyk-request-id": {
            "$ref": "#/components/headers/RequestIdResponseHeader"
          },
          "snyk-version-lifecycle-stage": {
            "$ref": "#/components/headers/VersionStageResponseHeader"
          },
          "snyk-version-requested": {
            "$ref": "#/components/headers/VersionRequestedResponseHeader"
          },
          "snyk-version-served": {
            "$ref": "#/components/headers/VersionServedResponseHeader"
          },
          "sunset": {
            "$ref": "#/components/headers/SunsetHeader"
          }
        }
      }
    },
    "schemas": {
      "ActualVersion": {
        "description": "Resolved API version",
        "pattern": "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$",
        "type": "string"
      },
      "DeprecatedRelationship": {
        "example": {
          "data": {
            "id": "e661d4ef-5ad5-4cef-ad16-5157cefa83f5",
            "type": "org"
          },
          "links": {
            "self": {
              "href": "/v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5"
            }
          }
        },
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "id": {
                "example": "4a72d1db-b465-4764-99e1-ecedad03b06a",
                "format": "uuid",
                "type": "string"
              },
              "type": {
                "description": "Type of the related resource",
                "example": "resource",
                "pattern": "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$",
                "type": "string"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "type": "object"
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          },
          "meta": {
            "$ref": "#/components/schemas/Meta"
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "Error": {
        "additionalProperties": false,
        "example": {
          "detail": "Not Found",
          "status": "404"
        },
        "properties": {
          "code": {
            "description": "An application-specific error code, expressed as a string value.",
            "example": "entity-not-found",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "example": "The request was missing these required fields: ...",
            "type": "string"
          },
          "id": {
            "description": "A unique identifier for this particular occurrence of the problem.",
            "example": "f16c31b5-6129-4571-add8-d589da9be524",
            "format": "uuid",
            "type": "string"
          },
          "meta": {
            "additionalProperties": true,
            "example": {
              "key": "value"
            },
            "type": "object"
          },
          "source": {
            "additionalProperties": false,
            "example": {
              "pointer": "/data/attributes"
            },
            "properties": {
              "parameter": {
                "description": "A string indicating which URI query parameter caused the error.",
                "example": "param1",
                "type": "string"
              },
              "pointer": {
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document.",
                "example": "/data/attributes",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
            "example": "400",
            "pattern": "^[45]\\d\\d$",
            "type": "string"
          },
          "title": {
            "description": "A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.",
            "example": "Bad request",
            "type": "string"
          }
        },
        "required": [
          "status",
          "detail"
        ],
        "type": "object"
      },
      "ErrorDocument": {
        "additionalProperties": false,
        "example": {
          "errors": [
            {
              "detail": "Permission denied for this resource",
              "status": "403"
            }
          ],
          "jsonapi": {
            "version": "1.0"
          }
        },
        "properties": {
          "errors": {
            "example": [
              {
                "detail": "Permission denied for this resource",
                "status": "403"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "minItems": 1,
            "type": "array"
          },
          "jsonapi": {
            "$ref": "#/components/schemas/JsonApi"
          }
        },
        "required": [
          "jsonapi",
          "errors"
        ],
        "type": "object"
      },
      "GroupIacSettingsRequest": {
        "description": "The Infrastructure as Code settings for a group.",
        "properties": {
          "attributes": {
            "properties": {
              "custom_rules": {
                "additionalProperties": false,
                "description": "The Infrastructure as Code custom rules settings for a group.",
                "minProperties": 1,
                "properties": {
                  "is_enabled": {
                    "$ref": "#/components/schemas/IsEnabled"
                  },
                  "oci_registry_tag": {
                    "$ref": "#/components/schemas/OciRegistryTag"
                  },
                  "oci_registry_url": {
                    "$ref": "#/components/schemas/OciRegistryUrl"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "Content type",
            "example": "iac_settings",
            "type": "string"
          }
        },
        "required": [
          "type",
          "attributes"
        ],
        "type": "object"
      },
      "GroupIacSettingsResponse": {
        "description": "The Infrastructure as Code settings for a group.",
        "properties": {
          "attributes": {
            "properties": {
              "custom_rules": {
                "description": "The Infrastructure as Code custom rules settings for a group.",
                "properties": {
                  "is_enabled": {
                    "$ref": "#/components/schemas/IsEnabled"
                  },
                  "oci_registry_tag": {
                    "$ref": "#/components/schemas/OciRegistryTag"
                  },
                  "oci_registry_url": {
                    "$ref": "#/components/schemas/OciRegistryUrl"
                  }
                },
                "type": "object"
              },
              "updated": {
                "$ref": "#/components/schemas/Updated"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID",
            "example": "ea536a06-0566-40ca-b96b-155568aa2027",
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "description": "Content type",
            "example": "iac_settings",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HelloWorld": {
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "properties": {
              "betaField": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "requestSubject": {
                "additionalProperties": false,
                "properties": {
                  "clientId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "publicId": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "publicId",
                  "type"
                ],
                "type": "object"
              }
            },
            "required": [
              "message",
              "betaField",
              "requestSubject"
            ],
            "type": "object"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "type": "object"
      },
      "InheritFromParent": {
        "description": "Which parent to inherit settings from.",
        "enum": [
          "group"
        ],
        "type": "string"
      },
      "IsEnabled": {
        "description": "Whether the custom rules feature is enabled or not.",
        "example": true,
        "type": "boolean"
      },
      "JsonApi": {
        "additionalProperties": false,
        "example": {
          "version": "1.0"
        },
        "properties": {
          "version": {
            "description": "Version of the JSON API specification this server supports.",
            "example": "1.0",
            "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$",
            "type": "string"
          }
        },
        "required": [
          "version"
        ],
        "type": "object"
      },
      "LinkProperty": {
        "example": "https://example.com/api/resource",
        "oneOf": [
          {
            "description": "A string containing the link’s URL.",
            "example": "https://example.com/api/resource",
            "type": "string"
          },
          {
            "additionalProperties": false,
            "example": {
              "href": "https://example.com/api/resource"
            },
            "properties": {
              "href": {
                "description": "A string containing the link’s URL.",
                "example": "https://example.com/api/resource",
                "type": "string"
              },
              "meta": {
                "$ref": "#/components/schemas/Meta"
              }
            },
            "required": [
              "href"
            ],
            "type": "object"
          }
        ]
      },
      "Links": {
        "additionalProperties": false,
        "properties": {
          "first": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "last": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "next": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "prev": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "related": {
            "$ref": "#/components/schemas/LinkProperty"
          },
          "self": {
            "$ref": "#/components/schemas/LinkProperty"
          }
        },
        "type": "object"
      },
      "Meta": {
        "additionalProperties": true,
        "description": "Free-form object that may contain non-standard information.",
        "example": {
          "key1": "value1",
          "key2": {
            "sub_key": "sub_value"
          },
          "key3": [
            "array_value1",
            "array_value2"
          ]
        },
        "type": "object"
      },
      "OciRegistryTag": {
        "description": "The tag for an OCI artifact inside an OCI registry.",
        "example": "latest",
        "type": "string"
      },
      "OciRegistryUrl": {
        "description": "The URL to an OCI registry.",
        "example": "https://registry-1.docker.io/account/bundle",
        "type": "string"
      },
      "OrgIacSettingsRequest": {
        "description": "The Infrastructure as Code settings for an org.",
        "properties": {
          "attributes": {
            "properties": {
              "custom_rules": {
                "additionalProperties": false,
                "description": "The Infrastructure as Code custom rules settings for an org.",
                "minProperties": 1,
                "properties": {
                  "inherit_from_parent": {
                    "$ref": "#/components/schemas/InheritFromParent"
                  },
                  "is_enabled": {
                    "$ref": "#/components/schemas/IsEnabled"
                  },
                  "oci_registry_tag": {
                    "$ref": "#/components/schemas/OciRegistryTag"
                  },
                  "oci_registry_url": {
                    "$ref": "#/components/schemas/OciRegistryUrl"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "Content type",
            "example": "iac_settings",
            "type": "string"
          }
        },
        "required": [
          "type",
          "attributes"
        ],
        "type": "object"
      },
      "OrgIacSettingsResponse": {
        "description": "The Infrastructure as Code settings for an org.",
        "properties": {
          "attributes": {
            "properties": {
              "custom_rules": {
                "description": "The Infrastructure as Code custom rules settings for an org.",
                "properties": {
                  "inherit_from_parent": {
                    "$ref": "#/components/schemas/InheritFromParent"
                  },
                  "is_enabled": {
                    "$ref": "#/components/schemas/IsEnabled"
                  },
                  "oci_registry_tag": {
                    "$ref": "#/components/schemas/OciRegistryTag"
                  },
                  "oci_registry_url": {
                    "$ref": "#/components/schemas/OciRegistryUrl"
                  },
                  "parents": {
                    "description": "Contains all parents the org can inherit settings from.",
                    "properties": {
                      "group": {
                        "description": "The Infrastructure as Code settings at the group level.",
                        "properties": {
                          "custom_rules": {
                            "description": "The Infrastructure as Code custom rules settings for a group.",
                            "properties": {
                              "is_enabled": {
                                "$ref": "#/components/schemas/IsEnabled"
                              },
                              "oci_registry_tag": {
                                "$ref": "#/components/schemas/OciRegistryTag"
                              },
                              "oci_registry_url": {
                                "$ref": "#/components/schemas/OciRegistryUrl"
                              }
                            },
                            "type": "object"
                          },
                          "updated": {
                            "$ref": "#/components/schemas/Updated"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "updated": {
                    "$ref": "#/components/schemas/Updated"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "ID",
            "example": "ea536a06-0566-40ca-b96b-155568aa2027",
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "description": "Content type",
            "example": "iac_settings",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Project": {
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "properties": {
              "businessCriticality": {
                "example": [
                  "medium"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "created": {
                "description": "The date that the project was created on",
                "example": "2021-05-29T09:50:54.014Z",
                "format": "date-time",
                "type": "string"
              },
              "environment": {
                "example": [
                  "external",
                  "hosted"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "lifecycle": {
                "example": [
                  "production"
                ],
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "name": {
                "example": "snyk/goof",
                "type": "string"
              },
              "origin": {
                "description": "The origin the project was added from",
                "example": "github",
                "type": "string"
              },
              "status": {
                "description": "Describes if a project is currently monitored or it is de-activated",
                "example": "active",
                "type": "string"
              },
              "tags": {
                "example": [
                  {
                    "key": "tag-key",
                    "value": "tag-value"
                  }
                ],
                "items": {
                  "$ref": "#/components/schemas/Tag"
                },
                "type": "array"
              },
              "targetReference": {
                "example": "master",
                "nullable": true,
                "type": "string"
              },
              "type": {
                "description": "The package manager of the project",
                "example": "maven",
                "type": "string"
              }
            },
            "required": [
              "name",
              "created",
              "origin",
              "type",
              "status"
            ],
            "type": "object"
          },
          "id": {
            "description": "The ID.",
            "example": "331ede0a-de94-456f-b788-166caeca58bf",
            "format": "uuid",
            "type": "string"
          },
          "relationships": {
            "additionalProperties": false,
            "properties": {
              "importingUser": {
                "$ref": "#/components/schemas/DeprecatedRelationship"
              },
              "org": {
                "$ref": "#/components/schemas/DeprecatedRelationship"
              },
              "owner": {
                "$ref": "#/components/schemas/DeprecatedRelationship"
              },
              "target": {
                "$ref": "#/components/schemas/DeprecatedRelationship"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "Content type.",
            "example": "projects",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "type": "object"
      },
      "QueryVersion": {
        "description": "Requested API version",
        "pattern": "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$",
        "type": "string"
      },
      "Tag": {
        "additionalProperties": false,
        "properties": {
          "key": {
            "example": "tag-key",
            "type": "string"
          },
          "value": {
            "example": "tag-value",
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "type": "object"
      },
      "Target": {
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "properties": {
              "displayName": {
                "description": "A human readable name for this target",
                "example": "snyk-fixtures/goof",
                "type": "string"
              },
              "isPrivate": {
                "description": "If the resource is private, or publicly accessible",
                "example": false,
                "type": "boolean"
              },
              "origin": {
                "description": "The origin that this target relates to",
                "example": "github",
                "type": "string"
              },
              "remoteUrl": {
                "description": "The url for the resource. Currently only set for targets imported from the CLI",
                "example": "http://github.com/snyk/local-goof",
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "displayName",
              "isPrivate",
              "origin",
              "remoteUrl"
            ],
            "type": "object"
          },
          "id": {
            "description": "The Snyk ID corresponding to this target",
            "example": "55a348e2-c3ad-4bbc-b40e-9b232d1f4121",
            "format": "uuid",
            "type": "string"
          },
          "relationships": {
            "additionalProperties": false,
            "properties": {
              "org": {
                "$ref": "#/components/schemas/DeprecatedRelationship"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "Content type.",
            "example": "target",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "type": "object"
      },
      "Updated": {
        "description": "The last time the settings were updated.",
        "example": "2021-11-12T10:31:06.026Z",
        "format": "date-time",
        "type": "string"
      },
      "User": {
        "additionalProperties": false,
        "properties": {
          "attributes": {
            "additionalProperties": false,
            "properties": {
              "email": {
                "description": "The email of the user.",
                "example": "user@someorg.com",
                "type": "string"
              },
              "name": {
                "description": "The name of the user.",
                "example": "user",
                "type": "string"
              },
              "username": {
                "description": "The username of the user.",
                "example": "username",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "The Snyk ID corresponding to this user",
            "example": "55a348e2-c3ad-4bbc-b40e-9b232d1f4121",
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "description": "Content type.",
            "example": "user",
            "type": "string"
          }
        },
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "APIToken": {
        "description": "API key value must be prefixed with \\\"Token \\\".",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "BearerAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Snyk API",
    "version": "REST"
  },
  "openapi": "3.0.3",
  "paths": {
    "/examples/hello_world": {
      "post": {
        "description": "Create a single result from the hello_world example",
        "operationId": "helloWorldCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "attributes": {
                    "additionalProperties": false,
                    "properties": {
                      "betaField": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "betaField"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "attributes"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HelloWorld"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A hello world entity being requested is returned",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Create a single result from the hello_world example",
        "tags": [
          "Examples"
        ],
        "x-snyk-api-releases": [
          "2021-06-13~beta"
        ],
        "x-snyk-api-version": "2021-06-13~beta"
      },
      "x-snyk-api-resource": "hello_world"
    },
    "/examples/hello_world/{id}": {
      "get": {
        "description": "Get a single result from the hello_world example",
        "operationId": "helloWorldGetOne",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "$ref": "#/components/parameters/StartingAfter"
          },
          {
            "$ref": "#/components/parameters/EndingBefore"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "description": "The id of the hello_world example entity to be retrieved.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/HelloWorld"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A hello world entity being requested is returned",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get a single result from the hello_world example",
        "tags": [
          "Examples"
        ],
        "x-snyk-api-releases": [
          "2021-06-01",
          "2021-06-07",
          "2021-06-13~beta"
        ],
        "x-snyk-api-version": "2021-06-13~beta"
      },
      "x-snyk-api-resource": "hello_world"
    },
    "/groups/{group_id}/settings/iac": {
      "get": {
        "description": "Get the Infrastructure as Code Settings for a group.",
        "operationId": "getIacSettingsForGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "description": "The id of the group whose Infrastructure as Code settings are requested",
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GroupIacSettingsResponse"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "The Infrastructure as Code Settings of the group.",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get the Infrastructure as Code Settings for a group",
        "tags": [
          "IacSettings"
        ],
        "x-snyk-api-releases": [
          "2021-11-03~beta",
          "2021-12-09"
        ],
        "x-snyk-api-version": "2021-12-09"
      },
      "patch": {
        "description": "Update the Infrastructure as Code Settings for a group.",
        "operationId": "updateIacSettingsForGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "description": "The id of the group whose Infrastructure as Code settings are getting updated",
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/GroupIacSettingsRequest"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/GroupIacSettingsResponse"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "The Infrastructure as Code Settings of the group were updated.",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Update the Infrastructure as Code Settings for a group",
        "tags": [
          "IacSettings"
        ],
        "x-snyk-api-releases": [
          "2021-11-03~beta",
          "2021-12-09"
        ],
        "x-snyk-api-version": "2021-12-09"
      },
      "x-snyk-api-resource": "iac_settings"
    },
    "/openapi": {
      "get": {
        "description": "List available versions of OpenAPI specification",
        "operationId": "listAPIVersions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List of available versions is returned",
            "headers": {
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [],
        "tags": [
          "OpenAPI"
        ]
      }
    },
    "/openapi/{version}": {
      "get": {
        "description": "Get OpenAPI specification effective at version.",
        "operationId": "getAPIVersion",
        "parameters": [
          {
            "description": "The requested version of the API",
            "in": "path",
            "name": "version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OpenAPI specification matching requested version is returned",
            "headers": {
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "security": [],
        "tags": [
          "OpenAPI"
        ]
      }
    },
    "/orgs/{org_id}/projects": {
      "get": {
        "description": "Get a list of an organization's projects.",
        "operationId": "getOrgsProjects",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "$ref": "#/components/parameters/StartingAfter"
          },
          {
            "$ref": "#/components/parameters/EndingBefore"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "description": "The id of the org to return a list of projects",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Return projects that prefix-match the provided name",
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return projects that match the provided origin",
            "in": "query",
            "name": "origin",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return projects that match the provided type",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return projects that match the provided status",
            "in": "query",
            "name": "status",
            "schema": {
              "enum": [
                "active",
                "inactive"
              ],
              "type": "string"
            }
          },
          {
            "description": "Return projects that match all provided tags",
            "explode": false,
            "in": "query",
            "name": "tags",
            "schema": {
              "items": {
                "pattern": "^[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+$",
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Return projects that have at least 1 option",
            "explode": false,
            "in": "query",
            "name": "businessCriticality",
            "schema": {
              "items": {
                "enum": [
                  "critical",
                  "high",
                  "medium",
                  "low"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Return projects that have at least 1 option",
            "explode": false,
            "in": "query",
            "name": "environment",
            "schema": {
              "items": {
                "enum": [
                  "frontend",
                  "backend",
                  "internal",
                  "external",
                  "mobile",
                  "saas",
                  "onprem",
                  "hosted",
                  "distributed"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Return projects that have at least 1 option",
            "explode": false,
            "in": "query",
            "name": "lifecycle",
            "schema": {
              "items": {
                "enum": [
                  "production",
                  "development",
                  "sandbox"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Return projects that belong to the provided target",
            "in": "query",
            "name": "targetId",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      },
                      "type": "array"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A list of projects is returned for the targeted org",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              },
              "x-envoy-to-remove-org-public-id": {
                "$ref": "#/components/headers/InternalGlooOrgIdHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get projects by org ID.",
        "tags": [
          "Projects"
        ],
        "x-snyk-api-releases": [
          "2021-06-04~beta"
        ],
        "x-snyk-api-version": "2021-06-04~beta"
      },
      "x-snyk-api-resource": "projects"
    },
    "/orgs/{org_id}/settings/iac": {
      "get": {
        "description": "Get the Infrastructure as Code Settings for an org.",
        "operationId": "getIacSettingsForOrg",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "description": "The id of the org whose Infrastructure as Code settings are requested.",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OrgIacSettingsResponse"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "The Infrastructure as Code Settings of the org.",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get the Infrastructure as Code Settings for an org.",
        "tags": [
          "IacSettings"
        ],
        "x-snyk-api-releases": [
          "2021-11-03~beta",
          "2021-12-09"
        ],
        "x-snyk-api-version": "2021-12-09"
      },
      "patch": {
        "description": "Update the Infrastructure as Code Settings for an org.",
        "operationId": "updateIacSettingsForOrg",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "description": "The id of the org whose Infrastructure as Code settings are getting updated",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrgIacSettingsRequest"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/OrgIacSettingsResponse"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "The Infrastructure as Code Settings of the org were updated.",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Update the Infrastructure as Code Settings for an org",
        "tags": [
          "IacSettings"
        ],
        "x-snyk-api-releases": [
          "2021-11-03~beta",
          "2021-12-09"
        ],
        "x-snyk-api-version": "2021-12-09"
      },
      "x-snyk-api-resource": "iac_settings"
    },
    "/orgs/{org_id}/targets": {
      "get": {
        "description": "Get a list of an organization's targets.",
        "operationId": "getOrgsTargets",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "$ref": "#/components/parameters/StartingAfter"
          },
          {
            "$ref": "#/components/parameters/EndingBefore"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "description": "The id of the org to return a list of targets",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "Return targets that match the provided value of isPrivate",
            "in": "query",
            "name": "isPrivate",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Return targets that match the provided remoteUrl. Currently null for all projects except those imported from the CLI",
            "in": "query",
            "name": "remoteUrl",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return targets that match the provided origin",
            "in": "query",
            "name": "origin",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to exclude targets from the response that have no associated projects",
            "in": "query",
            "name": "excludeEmpty",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "Return targets with display names starting with the provided string",
            "in": "query",
            "name": "displayName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Target"
                      },
                      "type": "array"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data",
                    "links"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A list of targets is returned for the targeted org",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              },
              "x-envoy-to-remove-org-public-id": {
                "$ref": "#/components/headers/InternalGlooOrgIdHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get targets by org ID",
        "tags": [
          "Targets"
        ],
        "x-snyk-api-releases": [
          "2021-08-20~beta"
        ],
        "x-snyk-api-version": "2021-08-20~beta"
      },
      "x-snyk-api-resource": "targets"
    },
    "/orgs/{org_id}/targets/{target_id}": {
      "delete": {
        "description": "Delete the specified target. Will fail if the target has any projects.",
        "operationId": "deleteOrgsTarget",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "description": "The id of the org to return the target from",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The id of the target to return",
            "in": "path",
            "name": "target_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The target is deleted if it is found in the specified org and has no projects",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              },
              "x-envoy-to-remove-org-public-id": {
                "$ref": "#/components/headers/InternalGlooOrgIdHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "409": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDocument"
                }
              }
            },
            "description": "Unprocessable Entity: The target cannot be deleted as it has projects.",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              },
              "x-envoy-to-remove-org-public-id": {
                "$ref": "#/components/headers/InternalGlooOrgIdHeader"
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Delete target by target ID",
        "tags": [
          "Targets"
        ],
        "x-snyk-api-releases": [
          "2021-09-29~beta"
        ],
        "x-snyk-api-version": "2021-09-29~beta"
      },
      "get": {
        "description": "Get a specified target for an organization.",
        "operationId": "getOrgsTarget",
        "parameters": [
          {
            "$ref": "#/components/parameters/Version"
          },
          {
            "description": "The id of the org to return the target from",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The id of the target to return",
            "in": "path",
            "name": "target_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Target"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    },
                    "links": {
                      "$ref": "#/components/schemas/Links"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "A single target is returned if it is found in the specified org",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              },
              "x-envoy-to-remove-org-public-id": {
                "$ref": "#/components/headers/InternalGlooOrgIdHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get target by org ID",
        "tags": [
          "Targets"
        ],
        "x-snyk-api-releases": [
          "2021-08-20~beta"
        ],
        "x-snyk-api-version": "2021-08-20~beta"
      },
      "x-snyk-api-resource": "targets"
    },
    "/orgs/{org_id}/users/{id}": {
      "get": {
        "description": "Get a summary of user.",
        "operationId": "getUser",
        "parameters": [
          {
            "description": "The id of the org",
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "description": "The id of the user",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "jsonapi": {
                      "$ref": "#/components/schemas/JsonApi"
                    }
                  },
                  "required": [
                    "jsonapi",
                    "data"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "User details",
            "headers": {
              "deprecation": {
                "$ref": "#/components/headers/DeprecationHeader"
              },
              "snyk-request-id": {
                "$ref": "#/components/headers/RequestIdResponseHeader"
              },
              "snyk-version-lifecycle-stage": {
                "$ref": "#/components/headers/VersionStageResponseHeader"
              },
              "snyk-version-requested": {
                "$ref": "#/components/headers/VersionRequestedResponseHeader"
              },
              "snyk-version-served": {
                "$ref": "#/components/headers/VersionServedResponseHeader"
              },
              "sunset": {
                "$ref": "#/components/headers/SunsetHeader"
              },
              "x-envoy-to-remove-normalized-request-path": {
                "$ref": "#/components/headers/InternalGlooNormalizedPathHeader"
              },
              "x-envoy-to-remove-org-public-id": {
                "$ref": "#/components/headers/InternalGlooOrgIdHeader"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        },
        "summary": "Get user by ID",
        "tags": [
          "Users"
        ],
        "x-snyk-api-releases": [
          "2021-09-13~beta"
        ],
        "x-snyk-api-version": "2021-09-13~beta"
      },
      "x-snyk-api-resource": "users"
    }
  },
  "security": [
    {
      "BearerAuth": []
    },
    {
      "APIToken": []
    }
  ],
  "servers": [
    {
      "description": "Public Snyk API",
      "url": "https://api.snyk.io/v3"
    },
    {
      "description": "ExpressJS validation routes",
      "url": "/api/v3"
    }
  ],
  "tags": [
    {
      "description": "An example of a v3 API resource",
      "name": "Examples"
    },
    {
      "description": "Infrastructure as Code Settings.",
      "name": "IacSettings"
    },
    {
      "description": "The OpenAPI specification for this service.",
      "name": "OpenAPI"
    },
    {
      "description": "A project is a single external resource which has been scanned by Snyk such as a manifest file or a container image. It may also be continuously monitored by Snyk.\n",
      "name": "Projects"
    },
    {
      "description": "A target is the external source of data from which Snyk can scan resources and create projects. Many projects may exist for the same target.\n",
      "name": "Targets"
    },
    {
      "description": "Snyk Users",
      "name": "Users"
    }
  ],
  "x-snyk-api-lifecycle": "released",
  "x-snyk-api-version": "2022-04-06~beta"
}